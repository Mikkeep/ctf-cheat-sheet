{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to CTF Cheat Sheet Project This project contains useful tooling and commands for CTF challenges. The wiki has been divided by different categories to help find content more easily. Search for the wanted content with search bar on the top, if a category is not found. Updates The web version is automatically updated from the master branch on each commit. If using the offline version, periodically download new changes to keep up-to-date. Source For the Git repository visit github.com . Web Site Visit https://mikkeep.github.io/ctf-cheat-sheet/","title":"Home"},{"location":"#welcome-to-ctf-cheat-sheet","text":"","title":"Welcome to CTF Cheat Sheet"},{"location":"#project","text":"This project contains useful tooling and commands for CTF challenges. The wiki has been divided by different categories to help find content more easily. Search for the wanted content with search bar on the top, if a category is not found.","title":"Project"},{"location":"#updates","text":"The web version is automatically updated from the master branch on each commit. If using the offline version, periodically download new changes to keep up-to-date.","title":"Updates"},{"location":"#source","text":"For the Git repository visit github.com .","title":"Source"},{"location":"#web-site","text":"Visit https://mikkeep.github.io/ctf-cheat-sheet/","title":"Web Site"},{"location":"binary/","text":"Binary Challenges Binary challenges more often contain reversing or shellcoding. Typical skillset required is buffer overflows, assembly. GDB Ghidra Shellcoding Pwntools Return-Oriented Programming (ROP)","title":"Binary"},{"location":"binary/#binary-challenges","text":"Binary challenges more often contain reversing or shellcoding. Typical skillset required is buffer overflows, assembly.","title":"Binary Challenges"},{"location":"binary/#gdb","text":"","title":"GDB"},{"location":"binary/#ghidra","text":"","title":"Ghidra"},{"location":"binary/#shellcoding","text":"","title":"Shellcoding"},{"location":"binary/#pwntools","text":"","title":"Pwntools"},{"location":"binary/#return-oriented-programming-rop","text":"","title":"Return-Oriented Programming (ROP)"},{"location":"crypto/","text":"Cryptography Challenges Openssl Openssl usage John the Ripper John the Ripper can be used to bruteforce passwords. John the Ripper usage PDF file bruteforce Turn the pdf file to usable with John. pdf2john <pdf_file_here> <output_hashfile_name_here> Brute the generated file with John: john --wordlist=/usr/share/wordlists/rockyou.txt <output_hashfile_name_here> Hashcat Hashcat can be used to bruteforce passwords and to generate mutations from words. Rule for case toggling can be found here Custom rules can be inserted into a file and used. Hashcat usage Mutate a word or wordlist: Create a wordlist, e.g. echo \"Bob\" > wordlist.txt Then use this wordlist for mutation from Hashcats pre shipped rule: hashcat --force --stdout wordlist.txt -r /usr/share/hashcat/rules/leetspeak.rule > leet_wordlist.txt Same can be done for custom rules, just replace the rule file. CyberChef Access CyberChef from here","title":"Crypto"},{"location":"crypto/#cryptography-challenges","text":"","title":"Cryptography Challenges"},{"location":"crypto/#openssl","text":"","title":"Openssl"},{"location":"crypto/#openssl-usage","text":"","title":"Openssl usage"},{"location":"crypto/#john-the-ripper","text":"John the Ripper can be used to bruteforce passwords.","title":"John the Ripper"},{"location":"crypto/#john-the-ripper-usage","text":"","title":"John the Ripper usage"},{"location":"crypto/#pdf-file-bruteforce","text":"Turn the pdf file to usable with John. pdf2john <pdf_file_here> <output_hashfile_name_here> Brute the generated file with John: john --wordlist=/usr/share/wordlists/rockyou.txt <output_hashfile_name_here>","title":"PDF file bruteforce"},{"location":"crypto/#hashcat","text":"Hashcat can be used to bruteforce passwords and to generate mutations from words. Rule for case toggling can be found here Custom rules can be inserted into a file and used.","title":"Hashcat"},{"location":"crypto/#hashcat-usage","text":"Mutate a word or wordlist: Create a wordlist, e.g. echo \"Bob\" > wordlist.txt Then use this wordlist for mutation from Hashcats pre shipped rule: hashcat --force --stdout wordlist.txt -r /usr/share/hashcat/rules/leetspeak.rule > leet_wordlist.txt Same can be done for custom rules, just replace the rule file.","title":"Hashcat usage"},{"location":"crypto/#cyberchef","text":"Access CyberChef from here","title":"CyberChef"},{"location":"forensic/","text":"Forensic Challenges Foremost Foremost is a tool for recovering files from memory dumps for example. File types such as doc, jpg, pdf and xls can be extracted. Foremost usage The tool can be used with command: foremost -t doc,jpg,pdf -i <memory_image.dmp> The output is given to output folder, where the results can be viewed. Exiftool Exiftool can be used to investigate files metadata. Exiftool usage The tool can be installed with command: apt install exiftool The tool can extract information with command: exiftool <image.jpg> Volatility Volatility can be used to investigate memory dump files. The binaries releases for Volatility2 and Volatility3 can be found from here Volatility usage List all processes from a Windows machine with Volatility3: python3 volatility3/vol.py <memory_dump.dmp> windows.pslist.PsList > output/pslist.out Take memdump with version 2 of Volatility: ./volatility_2.6_lin64_standalone/volatility_2.6_lin64_standalone -f <memdump.dmp> --profile=<machine_profile_here> memdump -p <pid_from_pslist> --dump-dir output/ Then make it readable with strings: output/<pid.dmp> > output/<filename.out> Grep for specific strings from dump file: strings output/<pid_file>.dmp | grep \"some specific string here\" > output/specific_string.out Tcpdump Tcpdump could be used to monitor active traffic from a server. Tcpdump usage Monitor interface: tcpdump -i <interface_here> Monitor output in ASCII: tcpdump -A -i <interface> Wireshark Wireshark can be used to investigate *.pcap files. Often capture files contain information about network or serial or bluetooth activity. For aiding investigations, it is often useful to track the specific trace.","title":"Forensic"},{"location":"forensic/#forensic-challenges","text":"","title":"Forensic Challenges"},{"location":"forensic/#foremost","text":"Foremost is a tool for recovering files from memory dumps for example. File types such as doc, jpg, pdf and xls can be extracted.","title":"Foremost"},{"location":"forensic/#foremost-usage","text":"The tool can be used with command: foremost -t doc,jpg,pdf -i <memory_image.dmp> The output is given to output folder, where the results can be viewed.","title":"Foremost usage"},{"location":"forensic/#exiftool","text":"Exiftool can be used to investigate files metadata.","title":"Exiftool"},{"location":"forensic/#exiftool-usage","text":"The tool can be installed with command: apt install exiftool The tool can extract information with command: exiftool <image.jpg>","title":"Exiftool usage"},{"location":"forensic/#volatility","text":"Volatility can be used to investigate memory dump files. The binaries releases for Volatility2 and Volatility3 can be found from here","title":"Volatility"},{"location":"forensic/#volatility-usage","text":"List all processes from a Windows machine with Volatility3: python3 volatility3/vol.py <memory_dump.dmp> windows.pslist.PsList > output/pslist.out Take memdump with version 2 of Volatility: ./volatility_2.6_lin64_standalone/volatility_2.6_lin64_standalone -f <memdump.dmp> --profile=<machine_profile_here> memdump -p <pid_from_pslist> --dump-dir output/ Then make it readable with strings: output/<pid.dmp> > output/<filename.out> Grep for specific strings from dump file: strings output/<pid_file>.dmp | grep \"some specific string here\" > output/specific_string.out","title":"Volatility usage"},{"location":"forensic/#tcpdump","text":"Tcpdump could be used to monitor active traffic from a server.","title":"Tcpdump"},{"location":"forensic/#tcpdump-usage","text":"Monitor interface: tcpdump -i <interface_here> Monitor output in ASCII: tcpdump -A -i <interface>","title":"Tcpdump usage"},{"location":"forensic/#wireshark","text":"Wireshark can be used to investigate *.pcap files. Often capture files contain information about network or serial or bluetooth activity. For aiding investigations, it is often useful to track the specific trace.","title":"Wireshark"},{"location":"network/","text":"","title":"Network"},{"location":"osint/","text":"OSINT Challenges Shodan Spiderfoot","title":"OSINT"},{"location":"osint/#osint-challenges","text":"","title":"OSINT Challenges"},{"location":"osint/#shodan","text":"","title":"Shodan"},{"location":"osint/#spiderfoot","text":"","title":"Spiderfoot"},{"location":"reversing/","text":"Reversing Challenges Ghidra https://ghidra-sre.org/ Used for binary files reverse-engineering. Radare2 Apktool JD-GUI","title":"Reversing"},{"location":"reversing/#reversing-challenges","text":"","title":"Reversing Challenges"},{"location":"reversing/#ghidra","text":"https://ghidra-sre.org/ Used for binary files reverse-engineering.","title":"Ghidra"},{"location":"reversing/#radare2","text":"","title":"Radare2"},{"location":"reversing/#apktool","text":"","title":"Apktool"},{"location":"reversing/#jd-gui","text":"","title":"JD-GUI"},{"location":"stegano/","text":"Steganography Steganography is a common CTF technique, used to hide information into a file. Aperi Solve Aperi'Solve is an online tool for stegano. StegCracker StegCracker is command line utility for cracking stegano challenges. With StegCracker it is possible to brute-force hidden data. Prefer Stegseek, as it is more efficient. StegCracker usage stegracker <file> <wordlist> Binwalk Binwalk tool can be used to extract information and files from source. Binwalk usage Extract common file types from file: binwalk -e <file> Extract all files from file: binwalk -dd '.*' <file> Strings Strings is a command line utility commonly found natively from *.nix operating systems. Can be used to find information from files. Strings usage Find strings from a file: strings <file> Use limiter for string length e.g. 8-character limit: strings -n 8 <file> Hexdump Hexdump can be used for extraction of binary data and files. Hexdump usage Display content of a binary file with binary and text and pipe to less: hexdump -C <file> | less Stegseek Stegseek is an improved version of stegcracker. It can be found here . It can be used to bruteforce password protected content. Stegseek usage: Use the Stegseek: stegseek <file_to_brute> <wordlist_file>","title":"Stegano"},{"location":"stegano/#steganography","text":"Steganography is a common CTF technique, used to hide information into a file.","title":"Steganography"},{"location":"stegano/#aperi-solve","text":"Aperi'Solve is an online tool for stegano.","title":"Aperi Solve"},{"location":"stegano/#stegcracker","text":"StegCracker is command line utility for cracking stegano challenges. With StegCracker it is possible to brute-force hidden data. Prefer Stegseek, as it is more efficient.","title":"StegCracker"},{"location":"stegano/#stegcracker-usage","text":"stegracker <file> <wordlist>","title":"StegCracker usage"},{"location":"stegano/#binwalk","text":"Binwalk tool can be used to extract information and files from source.","title":"Binwalk"},{"location":"stegano/#binwalk-usage","text":"Extract common file types from file: binwalk -e <file> Extract all files from file: binwalk -dd '.*' <file>","title":"Binwalk usage"},{"location":"stegano/#strings","text":"Strings is a command line utility commonly found natively from *.nix operating systems. Can be used to find information from files.","title":"Strings"},{"location":"stegano/#strings-usage","text":"Find strings from a file: strings <file> Use limiter for string length e.g. 8-character limit: strings -n 8 <file>","title":"Strings usage"},{"location":"stegano/#hexdump","text":"Hexdump can be used for extraction of binary data and files.","title":"Hexdump"},{"location":"stegano/#hexdump-usage","text":"Display content of a binary file with binary and text and pipe to less: hexdump -C <file> | less","title":"Hexdump usage"},{"location":"stegano/#stegseek","text":"Stegseek is an improved version of stegcracker. It can be found here . It can be used to bruteforce password protected content.","title":"Stegseek"},{"location":"stegano/#stegseek-usage","text":"Use the Stegseek: stegseek <file_to_brute> <wordlist_file>","title":"Stegseek usage:"},{"location":"web/","text":"Web Exploitation Web exploitation often includes challenges related to different web vulnerabilities. Typical to exploit API's and bruteforcing such as Ffufing. Ffuf ffuf -w /path/to/wordlist -u https://target/FUZZ BurpSuite Nmap Typical tool for port scanning. Nmap usage Use basic scan with command: nmap -sC -sV <ip_here> Wireshark Tcpdump Curl Postman Sqlmap","title":"Web"},{"location":"web/#web-exploitation","text":"Web exploitation often includes challenges related to different web vulnerabilities. Typical to exploit API's and bruteforcing such as Ffufing.","title":"Web Exploitation"},{"location":"web/#ffuf","text":"ffuf -w /path/to/wordlist -u https://target/FUZZ","title":"Ffuf"},{"location":"web/#burpsuite","text":"","title":"BurpSuite"},{"location":"web/#nmap","text":"Typical tool for port scanning.","title":"Nmap"},{"location":"web/#nmap-usage","text":"Use basic scan with command: nmap -sC -sV <ip_here>","title":"Nmap usage"},{"location":"web/#wireshark","text":"","title":"Wireshark"},{"location":"web/#tcpdump","text":"","title":"Tcpdump"},{"location":"web/#curl","text":"","title":"Curl"},{"location":"web/#postman","text":"","title":"Postman"},{"location":"web/#sqlmap","text":"","title":"Sqlmap"}]}